# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  pre_build_test:
    docker:
      - image: jrcodes/laravel62-php72:v0.1.0-rc.1
    steps:
      - checkout
      - run:
          name: Create Temp Env File
          command: |
            touch ./.circleci/.env
      - run:
          name: Add Env Variables
          command: |
            BRANCH=`echo $CIRCLE_BRANCH`
            DEBUG=$([ $BRANCH == "master" ] && echo ${App_Debug_On} || echo ${App_Debug_Off})
            echo APP_NAME=${App_Name}$'\r\n' >> ./.circleci/.env
            echo APP_DEBUG=$DEBUG$'\r\n' >> ./.circleci/.env
            echo APP_KEY=${App_Key_Dev}$'\r\n' >> ./.circleci/.env
            echo DB_Connection=${App_Key_Dev}$'\r\n' >> ./.circleci/.env
      - run:
          name: Move Tmp Env To Project
          command: |
            touch ./.env
            VARS=`echo $(cat ./.circleci/.env)`
            echo $VARS >> ./.env
      - run:
          name: Download Composer
          command: |
            php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
            php composer-setup.php
            php -r "unlink('composer-setup.php');"
            php composer.phar self-update
            mv composer.phar /usr/local/bin/composer
      - run:
          name: Run Composer Install
          command: |
            composer install -n --prefer-dist
      - run:
          name: Unit Test
          command: |
            ./vendor/bin/phpunit
      - run:
          name: Remove Tmp Env files
          command: |
            rm ./.env
            rm ./.circleci/.env
  build_docker_image:
    environment:
      IMAGE_NAME: jrcodes/hellaevents
      DOCKER_USERNAME: jrcodes
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: |
            echo "${Docker_Password}" | docker login -u "${Docker_Username}" --password-stdin
            docker build -t jrcodes/hellaevents:latest .
            docker push jrcodes/hellaevents:latest
workflows:
  version: 2
  build-master:
    jobs:
      - pre_build_test
      - build_docker_image:
          requires:
            - pre_build_test
